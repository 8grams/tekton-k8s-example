# kubectl -n tekton apply -f pipeline.yaml
# kubectl -n tekton apply -f https://api.hub.tekton.dev/v1/resource/tekton/task/curl/0.1/raw
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: 8grams-pipeline
  namespace: tekton
spec:
  params:
    - name: name
    - name: ref
    - name: registry
    - name: repository_url
    - name: git_url
  workspaces:
    - name: git-source
    - name: github-secret
    # if use private registry
    # - name: registry-secret
  tasks:
    - name: fetch-from-git
      when:
      - input: "$(params.ref)"
        operator: in
        values: ["refs/heads/develop", "refs/heads/master"]
      - input: "$(params.name)"
        operator: in
        values: ["homepage"]
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/tektoncd/catalog.git
          - name: pathInRepo
            value: /task/git-clone/0.9/git-clone.yaml
          - name: revision
            value: main
      params:
        - name: url
          value: $(params.git_url)
        - name: revision
          value: $(params.ref)
      workspaces:
        - name: output
          workspace: git-source
        - name: ssh-directory
          workspace: github-secret
    - name: build-docker-image
      when:
      - input: "$(params.ref)"
        operator: in
        values: ["refs/heads/develop"]
      taskRef:
        name: kaniko
      params:
        - name: IMAGE
          value: "$(params.registry):latest"
        - name: EXTRA_ARGS
          value: ["--cache=false", --build-arg=DEPLOY_ENV=staging]
      runAfter: [fetch-from-git]
      workspaces:
        - name: source
          workspace: git-source
           #  if you use private registry
        # - name: dockerconfig
        #   workspace: registry-secret
    - name: build-docker-image-stable
      when:
      - input: "$(params.name)"
        operator: in
        values: ["homepage"]
      - input: "$(params.ref)"
        operator: in
        values: ["refs/heads/master"]
      taskRef:
        name: kaniko
      params:
        - name: IMAGE
          value: "$(params.registry):stable"
      runAfter: [fetch-from-git]
      workspaces:
        - name: source
          workspace: git-source
        #  if you use private registry
        # - name: dockerconfig
        #   workspace: registry-secret
  finally:
    - name: notif-discord
      when:
      - input: "$(params.ref)"
        operator: in
        values: ["refs/heads/develop", "refs/heads/master"]
      - input: "$(params.name)"
        operator: in
        values: ["homepage"]
      taskRef: 
        name: send-to-webhook-discord
      params:
        - name: webhook-secret
          value: discord-webhook-secret
        - name: message
          value: "Build $(params.name) is done. Check on https://tekton-dashboard.example.com/#/pipelineruns for more details."
        - name: bot-name
          value: "Tekton"
        - name: avatar-url
          value: "https://github.com/tektoncd.png"
---